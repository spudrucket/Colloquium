/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colloquium;

import static colloquium.ShowInformants.idColumn;
import colloquium.exceptions.IllegalOrphanException;
import colloquium.exceptions.NonexistentEntityException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;

/**
 *
 * @author Mark_K
 */
public class ShowInterviews extends javax.swing.JFrame {
    
    public static int idColumn = 0;

    /**
     * Creates new form ShowInterviews
     */
    public ShowInterviews() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ColloquiumPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ColloquiumPU").createEntityManager();
        interviewsQuery = java.beans.Beans.isDesignTime() ? null : ColloquiumPUEntityManager.createQuery("SELECT i FROM Interviews i");
        interviewsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : interviewsQuery.getResultList();
        addNewButton = new javax.swing.JButton();
        updateInterviewButton = new javax.swing.JButton();
        deleteInterviewButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        addNewButton.setText("Add New");
        addNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewButtonActionPerformed(evt);
            }
        });

        updateInterviewButton.setText("Update");
        updateInterviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInterviewButtonActionPerformed(evt);
            }
        });

        deleteInterviewButton.setText("Delete");
        deleteInterviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInterviewButtonActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, interviewsList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${title}"));
        columnBinding.setColumnName("Title");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${informant}"));
        columnBinding.setColumnName("Informant");
        columnBinding.setColumnClass(colloquium.Informants.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${interviewer}"));
        columnBinding.setColumnName("Interviewer");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${interviewdate}"));
        columnBinding.setColumnName("Interviewdate");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${location}"));
        columnBinding.setColumnName("Location");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${summary}"));
        columnBinding.setColumnName("Summary");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateInterviewButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteInterviewButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewButton)
                    .addComponent(updateInterviewButton)
                    .addComponent(deleteInterviewButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Interviews getSelectedInterview () {
        Interviews selectedInterview = null;
        if (jTable1.isRowSelected(jTable1.getSelectedRow())) {
            for (Interviews i : interviewsList) {
                if (i.getId() == jTable1.getValueAt(jTable1.getSelectedRow(), idColumn)) {
                selectedInterview = i;
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Please first select an Interview.");
        }
        return selectedInterview;
    }
    
    private void addNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewButtonActionPerformed
        AddInterview addint = new AddInterview();
        addint.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addNewButtonActionPerformed

    private void updateInterviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInterviewButtonActionPerformed
        if (getSelectedInterview() != null) {
            UpdateInterviews uint = new UpdateInterviews(getSelectedInterview());
            uint.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_updateInterviewButtonActionPerformed

    private void deleteInterviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInterviewButtonActionPerformed
        if (getSelectedInterview() != null) {
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Interview?");
            if (confirm == 0) {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("ColloquiumPU");
                InterviewsJpaController ijc = new InterviewsJpaController(emf);
                try {
                    ijc.destroy(getSelectedInterview().getId());
                } catch (IllegalOrphanException ex) {
                    Logger.getLogger(ShowInterviews.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(ShowInterviews.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.setVisible(false);
            ShowInterviews sint = new ShowInterviews();
            sint.setVisible(true);
        }
    }//GEN-LAST:event_deleteInterviewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowInterviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowInterviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowInterviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowInterviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowInterviews().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager ColloquiumPUEntityManager;
    private javax.swing.JButton addNewButton;
    private javax.swing.JButton deleteInterviewButton;
    private java.util.List<colloquium.Interviews> interviewsList;
    private javax.persistence.Query interviewsQuery;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton updateInterviewButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
