/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colloquium;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Mark_K
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        populateTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ColloquiumPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ColloquiumPU").createEntityManager();
        tagsQuery = java.beans.Beans.isDesignTime() ? null : ColloquiumPUEntityManager.createQuery("SELECT t FROM Tags t");
        tagsList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tagsQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        tagsList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        addInformantMenuItem = new javax.swing.JMenuItem();
        addInterviewMenuItem = new javax.swing.JMenuItem();
        addTagMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        editInformantsMenuItem = new javax.swing.JMenuItem();
        editInterviewsMenuItem = new javax.swing.JMenuItem();
        editTagsMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        refreshMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tagsList1, tagsList);
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(tagsList);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setRootVisible(false);
        jScrollPane2.setViewportView(jTree1);

        jMenu1.setText("File");

        jMenuItem1.setText("New Project");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        addInformantMenuItem.setText("Add Informant");
        addInformantMenuItem.setActionCommand("Add Informants");
        addInformantMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInformantMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(addInformantMenuItem);

        addInterviewMenuItem.setText("Add Interview");
        addInterviewMenuItem.setToolTipText("");
        addInterviewMenuItem.setActionCommand("Add Interviews");
        addInterviewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInterviewMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(addInterviewMenuItem);

        addTagMenuItem.setText("Add Tag");
        addTagMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTagMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(addTagMenuItem);
        jMenu1.add(jSeparator2);

        editInformantsMenuItem.setText("Edit Informants");
        editInformantsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editInformantsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(editInformantsMenuItem);

        editInterviewsMenuItem.setText("Edit Interviews");
        editInterviewsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editInterviewsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(editInterviewsMenuItem);

        editTagsMenuItem.setText("Edit Tags");
        editTagsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTagsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(editTagsMenuItem);
        jMenu1.add(jSeparator3);

        refreshMenuItem.setText("Refresh");
        refreshMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(refreshMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1019, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void addInformantMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInformantMenuItemActionPerformed
        AddInformant ainfo = new AddInformant();
        ainfo.setVisible(true);
    }//GEN-LAST:event_addInformantMenuItemActionPerformed

    private void addInterviewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInterviewMenuItemActionPerformed
        AddInterview aint = new AddInterview();
        aint.setVisible(true);
    }//GEN-LAST:event_addInterviewMenuItemActionPerformed

    private void addTagMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTagMenuItemActionPerformed
        AddTag atag = new AddTag();
        atag.setVisible(true);
    }//GEN-LAST:event_addTagMenuItemActionPerformed

    private void editInformantsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editInformantsMenuItemActionPerformed
        ShowInformants sinf = new ShowInformants();
        sinf.setVisible(true);
    }//GEN-LAST:event_editInformantsMenuItemActionPerformed

    private void refreshMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMenuItemActionPerformed
        this.setVisible(false);
        MainWindow mw = new MainWindow();
        mw.setVisible(true);
    }//GEN-LAST:event_refreshMenuItemActionPerformed

    private void editInterviewsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editInterviewsMenuItemActionPerformed
        ShowInterviews sint = new ShowInterviews();
        sint.setVisible(true);
    }//GEN-LAST:event_editInterviewsMenuItemActionPerformed

    private void editTagsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTagsMenuItemActionPerformed
        ShowTags stag = new ShowTags();
        stag.setVisible(true);
    }//GEN-LAST:event_editTagsMenuItemActionPerformed

    public final void populateTree() {
        try {
            ArrayList list = new ArrayList();
            list.add("Informants");
            EntityManager entityManager = Persistence.createEntityManagerFactory("ColloquiumPU").createEntityManager();
            Query query = entityManager.createNamedQuery("Informants.findAll");
            List<Informants> informantsList = query.getResultList();
            for (Informants i : informantsList) {
                Object value[] = {i.getId().toString(), i.getNickname()};
                list.add(value);
            }
            
            Object hierarchy[] = list.toArray();
            DefaultMutableTreeNode root = processHierarchy(hierarchy);

            DefaultTreeModel treeModel = new DefaultTreeModel(root);
            jTree1.setModel(treeModel);
        } catch (Exception e) {
        }
    }
    
    public DefaultMutableTreeNode processHierarchy(Object[] hierarchy) {
        DefaultMutableTreeNode node = new DefaultMutableTreeNode(hierarchy[0]);
            
        EntityManager entityManager = Persistence.createEntityManagerFactory("ColloquiumPU").createEntityManager();
        Query query = entityManager.createNamedQuery("Informants.findAll");
        List<Informants> informantsList = query.getResultList();

        DefaultMutableTreeNode child, grandchild;
        for (Informants info : informantsList) {
            child = new DefaultMutableTreeNode(info);
            node.add(child);
            Query query2 = entityManager.createNamedQuery("Interviews.findByInformant").setParameter("informant", info);
            List<Interviews> interviewsList = query2.getResultList();
            for (Interviews inter : interviewsList) {    
                grandchild = new DefaultMutableTreeNode(inter);
                child.add(grandchild);                               
            }
        }        
        return (node);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager ColloquiumPUEntityManager;
    private javax.swing.JMenuItem addInformantMenuItem;
    private javax.swing.JMenuItem addInterviewMenuItem;
    private javax.swing.JMenuItem addTagMenuItem;
    private javax.swing.JMenuItem editInformantsMenuItem;
    private javax.swing.JMenuItem editInterviewsMenuItem;
    private javax.swing.JMenuItem editTagsMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTree jTree1;
    private javax.swing.JMenuItem refreshMenuItem;
    private javax.swing.JList<String> tagsList;
    private java.util.List<colloquium.Tags> tagsList1;
    private javax.persistence.Query tagsQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
